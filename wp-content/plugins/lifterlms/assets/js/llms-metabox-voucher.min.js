function llms_on_voucher_duplicate(e){if(e.length){for(var t=0;t<e.length;t++)jQuery('input[value="'+e[t].code+'"]').css("background-color","rgba(226, 96, 73, 0.6)");alert("Please make sure that there are no duplicate voucher codes.")}else jQuery("#post").submit()}!function(s){var r=[];function c(){for(var e="",t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",a=0;a<12;a++)e+=t.charAt(Math.floor(Math.random()*t.length));return e}s(document).ready(function(){var u=!1,o=0;function n(){s(".llms-voucher-delete").unbind("click"),s(".llms-voucher-delete").click(function(e){e.preventDefault();var t=s(this),a=t.data("id");u=!0,a?(r.push(a),s("#delete_ids").val(r.join(","))):o--,t.closest("tr").remove()})}s("#llms_voucher_add_codes").click(function(e){e.preventDefault();var t=s("#llms_voucher_add_quantity").val(),a=s("#llms_voucher_add_uses").val(),r="";if(u=!0,s.isNumeric(t)&&s.isNumeric(a)&&0<parseInt(t)&&0<parseInt(a)){if(50<t)return void alert("You can only generate 50 rows at a time");if(50<(o+=parseInt(t)))return alert("Please save before adding any more codes, limit is 50 at a time"),void(o-=parseInt(t));for(var l=1;l<=parseInt(t);l++)r+='<tr><td></td><td><input type="text" maxlength="20" placeholder="Code" value="'+c()+'" name="llms_voucher_code[]"><input type="hidden" name="llms_voucher_code_id[]" value="0"></td><td><span>0 / </span><input type="text" placeholder="Uses" value="'+a+'" class="llms-voucher-uses" name="llms_voucher_uses[]"></td><td><a href="#" class="llms-voucher-delete">'+delete_icon+"</a></td></tr>"}s("#llms_voucher_tbody").append(r),n()}),n(),s("#llms_voucher_tbody input").change(function(){u=!0}),s("#post").on("submit",function(){return"publish"===s("#publish").attr("name")&&s("<input />").attr("type","hidden").attr("name","publish").attr("value","true").appendTo("#post"),!0}),window.onbeforeunload=function(){return u?"If you leave this page you will lose your unsaved changes.":null},s("input[type=submit]").click(function(e){var t,a,r,l={},o=!1;return s('input[name="llms_voucher_code[]"]').each(function(){var e=s(this).val();l[e]?(s(this).css("background-color","rgba(226, 96, 73, 0.6)"),o=!0):l[e]=!0}),o?alert("Please make sure that there are no duplicate voucher codes."):s("#_llms_voucher_courses").val()||s("#_llms_voucher_membership").val()?(u=!1,r=[],s('input[name="llms_voucher_code[]"]').each(function(){r.push(s(this).val())}),t=r,a={action:"check_voucher_duplicate",postId:jQuery("#post_ID").val(),codes:t},new Ajax("post",a,!1).check_voucher_duplicate()):alert("Please select course or membership before saving."),!1})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxsbXMtbWV0YWJveC12b3VjaGVyLmpzIl0sIm5hbWVzIjpbImxsbXNfb25fdm91Y2hlcl9kdXBsaWNhdGUiLCJyZXN1bHRzIiwibGVuZ3RoIiwiaSIsImpRdWVyeSIsImNvZGUiLCJjc3MiLCJhbGVydCIsInN1Ym1pdCIsIiQiLCJkZWxldGVJZHMiLCJyYW5kb21pemVDb2RlIiwidGV4dCIsInBvc3NpYmxlIiwiY2hhckF0IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiZG9jdW1lbnQiLCJyZWFkeSIsImNoYW5nZU5vdFNhdmVkIiwiY29kZXNBZGRlZFNpbmNlTGFzdFNhdmUiLCJiaW5kRGVsZXRlVm91Y2hlckNvZGUiLCJ1bmJpbmQiLCJjbGljayIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInQiLCJ0aGlzIiwib2xkIiwiZGF0YSIsInB1c2giLCJ2YWwiLCJqb2luIiwiY2xvc2VzdCIsInJlbW92ZSIsInF0eSIsInVzZXMiLCJodG1sIiwiaXNOdW1lcmljIiwicGFyc2VJbnQiLCJkZWxldGVfaWNvbiIsImFwcGVuZCIsImNoYW5nZSIsIm9uIiwiYXR0ciIsImFwcGVuZFRvIiwid2luZG93Iiwib25iZWZvcmV1bmxvYWQiLCJjb2RlcyIsInVuaXF1ZV92YWx1ZXMiLCJkdXBsaWNhdGUiLCJlYWNoIiwiYWN0aW9uIiwicG9zdElkIiwiQWpheCIsImNoZWNrX3ZvdWNoZXJfZHVwbGljYXRlIl0sIm1hcHBpbmdzIjoiQUE4SkEsU0FBU0EsMEJBQTJCQyxHQUNoQyxHQUFHQSxFQUFRQyxPQUFRLENBQ2YsSUFBSSxJQUFJQyxFQUFJLEVBQUdBLEVBQUlGLEVBQVFDLE9BQVFDLElBQy9CQyxPQUFPLGdCQUFrQkgsRUFBUUUsR0FBR0UsS0FBTyxNQUFNQyxJQUFJLG1CQUFvQiwwQkFFN0VDLE1BQU0sb0VBRU5ILE9BQVEsU0FBVUksVUFySzFCLFNBQVdDLEdBRVAsSUFBSUMsRUFBWSxHQTBIaEIsU0FBU0MsSUFJTCxJQUhBLElBQUlDLEVBQU8sR0FDUEMsRUFBVyxpRUFFTlYsRUFBSSxFQUFHQSxFQUFJLEdBQUlBLElBQ3BCUyxHQUFRQyxFQUFTQyxPQUFPQyxLQUFLQyxNQUFNRCxLQUFLRSxTQUFXSixFQUFTWCxTQUVoRSxPQUFPVSxFQS9IWEgsRUFBRVMsVUFBVUMsTUFBTSxXQUVkLElBQUlDLEdBQWlCLEVBQ2pCQyxFQUEwQixFQThGOUIsU0FBU0MsSUFDTGIsRUFBRSx3QkFBd0JjLE9BQU8sU0FDakNkLEVBQUUsd0JBQXdCZSxNQUFNLFNBQVVDLEdBQ3RDQSxFQUFFQyxpQkFFRixJQUFJQyxFQUFJbEIsRUFBRW1CLE1BQ05DLEVBQU1GLEVBQUVHLEtBQUssTUFFakJWLEdBQWlCLEVBRWJTLEdBQ0FuQixFQUFVcUIsS0FBS0YsR0FFZnBCLEVBQUUsZUFBZXVCLElBQUl0QixFQUFVdUIsS0FBSyxPQUVwQ1osSUFJSk0sRUFBRU8sUUFBUSxNQUFNQyxXQS9HeEIxQixFQUFFLDJCQUEyQmUsTUFBTSxTQUFVQyxHQUN6Q0EsRUFBRUMsaUJBRUYsSUFBSVUsRUFBTTNCLEVBQUUsOEJBQThCdUIsTUFDdENLLEVBQU81QixFQUFFLDBCQUEwQnVCLE1BQ25DTSxFQUFPLEdBSVgsR0FGQWxCLEdBQWlCLEVBRWJYLEVBQUU4QixVQUFVSCxJQUFRM0IsRUFBRThCLFVBQVVGLElBQ1osRUFBaEJHLFNBQVNKLElBQTZCLEVBQWpCSSxTQUFTSCxHQUFXLENBRXpDLEdBQVMsR0FBTkQsRUFFQyxZQURBN0IsTUFBTSwyQ0FNVixHQUE2QixJQUY3QmMsR0FBMkJtQixTQUFTSixJQUtoQyxPQUZBN0IsTUFBTSx3RUFDTmMsR0FBMkJtQixTQUFTSixJQUl4QyxJQUFLLElBQUlqQyxFQUFJLEVBQUdBLEdBQUtxQyxTQUFTSixHQUFNakMsSUFDaENtQyxHQUFRLGdGQUc2RDNCLElBQWtCLG9LQUdaMEIsRUFBTywyR0FDN0JJLFlBQWMsaUJBTS9FaEMsRUFBRSx1QkFBdUJpQyxPQUFPSixHQUVoQ2hCLE1BR0pBLElBRUFiLEVBQUUsNkJBQTZCa0MsT0FBTyxXQUNsQ3ZCLEdBQWlCLElBR3JCWCxFQUFHLFNBQVVtQyxHQUFJLFNBQVUsV0FPdkIsTUFOa0MsWUFBL0JuQyxFQUFFLFlBQVlvQyxLQUFLLFNBQ2xCcEMsRUFBRSxhQUFhb0MsS0FBSyxPQUFRLFVBQ3ZCQSxLQUFLLE9BQVEsV0FDYkEsS0FBSyxRQUFTLFFBQ2RDLFNBQVMsVUFFWCxJQUdYQyxPQUFPQyxlQUFpQixXQUNwQixPQUFPNUIsRUFBaUIsNkRBQStELE1BRzNGWCxFQUFFLHNCQUFzQmUsTUFBTSxTQUFVQyxHQUNwQyxJQWlFQXdCLEVBRUFuQixFQU9BbUIsRUExRUlDLEVBQWdCLEdBQ2hCQyxHQUFZLEVBVWhCLE9BVEExQyxFQUFFLHFDQUFxQzJDLEtBQUssV0FDeEMsSUFBSXBCLEVBQU12QixFQUFFbUIsTUFBTUksTUFDWGtCLEVBQWNsQixJQUdqQnZCLEVBQUVtQixNQUFNdEIsSUFBSSxtQkFBb0IsMEJBQ2hDNkMsR0FBWSxHQUhaRCxFQUFjbEIsSUFBTyxJQU0xQm1CLEVBQ0M1QyxNQUFNLCtEQUtMRSxFQUFFLDBCQUEwQnVCLE9BQVN2QixFQUFFLDZCQUE2QnVCLE9BS3pFWixHQUFpQixFQW9EakI2QixFQUFRLEdBQ1p4QyxFQUFFLHFDQUFxQzJDLEtBQUssV0FDeENILEVBQU1sQixLQUFLdEIsRUFBRW1CLE1BQU1JLFNBWG5CaUIsRUFjR0EsRUFaSG5CLEVBQU8sQ0FBQ3VCLE9BQVEsMEJBQTJCQyxPQUFXbEQsT0FBTyxZQUFZNEIsTUFBT2lCLE1BQVVBLEdBRW5GLElBQUlNLEtBQUssT0FBUXpCLEdBQU0sR0FDN0IwQiwyQkFwREdqRCxNQUFNLHNEQUxDLE1BdkZ2QixDQTRKR0giLCJmaWxlIjoibGxtcy1tZXRhYm94LXZvdWNoZXIubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCAkICl7XG5cbiAgICB2YXIgZGVsZXRlSWRzID0gW107XG5cbiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgdmFyIGNoYW5nZU5vdFNhdmVkID0gZmFsc2U7XG4gICAgICAgIHZhciBjb2Rlc0FkZGVkU2luY2VMYXN0U2F2ZSA9IDA7XG5cbiAgICAgICAgJCgnI2xsbXNfdm91Y2hlcl9hZGRfY29kZXMnKS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICB2YXIgcXR5ID0gJCgnI2xsbXNfdm91Y2hlcl9hZGRfcXVhbnRpdHknKS52YWwoKTtcbiAgICAgICAgICAgIHZhciB1c2VzID0gJCgnI2xsbXNfdm91Y2hlcl9hZGRfdXNlcycpLnZhbCgpO1xuICAgICAgICAgICAgdmFyIGh0bWwgPSAnJztcblxuICAgICAgICAgICAgY2hhbmdlTm90U2F2ZWQgPSB0cnVlO1xuXG4gICAgICAgICAgICBpZiAoJC5pc051bWVyaWMocXR5KSAmJiAkLmlzTnVtZXJpYyh1c2VzKSkge1xuICAgICAgICAgICAgICAgIGlmIChwYXJzZUludChxdHkpID4gMCAmJiBwYXJzZUludCh1c2VzKSA+IDApIHtcblxuICAgICAgICAgICAgICAgICAgICBpZihxdHkgPiA1MCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoXCJZb3UgY2FuIG9ubHkgZ2VuZXJhdGUgNTAgcm93cyBhdCBhIHRpbWVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBjb2Rlc0FkZGVkU2luY2VMYXN0U2F2ZSArPSBwYXJzZUludChxdHkpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmKGNvZGVzQWRkZWRTaW5jZUxhc3RTYXZlID4gNTApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwiUGxlYXNlIHNhdmUgYmVmb3JlIGFkZGluZyBhbnkgbW9yZSBjb2RlcywgbGltaXQgaXMgNTAgYXQgYSB0aW1lXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29kZXNBZGRlZFNpbmNlTGFzdFNhdmUgLT0gcGFyc2VJbnQocXR5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IHBhcnNlSW50KHF0eSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaHRtbCArPSAnPHRyPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8dGQ+PC90ZD4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHRkPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8aW5wdXQgdHlwZT1cInRleHRcIiBtYXhsZW5ndGg9XCIyMFwiIHBsYWNlaG9sZGVyPVwiQ29kZVwiIHZhbHVlPVwiJyArIHJhbmRvbWl6ZUNvZGUoKSArICdcIiBuYW1lPVwibGxtc192b3VjaGVyX2NvZGVbXVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJsbG1zX3ZvdWNoZXJfY29kZV9pZFtdXCIgdmFsdWU9XCIwXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvdGQ+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJzx0ZD48c3Bhbj4wIC8gPC9zcGFuPjxpbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiVXNlc1wiIHZhbHVlPVwiJyArIHVzZXMgKyAnXCIgY2xhc3M9XCJsbG1zLXZvdWNoZXItdXNlc1wiIG5hbWU9XCJsbG1zX3ZvdWNoZXJfdXNlc1tdXCI+PC90ZD4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHRkPjxhIGhyZWY9XCIjXCIgY2xhc3M9XCJsbG1zLXZvdWNoZXItZGVsZXRlXCI+JyArIGRlbGV0ZV9pY29uICsgJzwvYT48L3RkPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3RyPic7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICQoJyNsbG1zX3ZvdWNoZXJfdGJvZHknKS5hcHBlbmQoaHRtbCk7XG5cbiAgICAgICAgICAgIGJpbmREZWxldGVWb3VjaGVyQ29kZSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBiaW5kRGVsZXRlVm91Y2hlckNvZGUoKTtcblxuICAgICAgICAkKCcjbGxtc192b3VjaGVyX3Rib2R5IGlucHV0JykuY2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY2hhbmdlTm90U2F2ZWQgPSB0cnVlO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKCBcIiNwb3N0XCIgKS5vbiggJ3N1Ym1pdCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYoJCgnI3B1Ymxpc2gnKS5hdHRyKCduYW1lJykgPT09ICdwdWJsaXNoJykge1xuICAgICAgICAgICAgICAgICQoJzxpbnB1dCAvPicpLmF0dHIoJ3R5cGUnLCAnaGlkZGVuJylcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ25hbWUnLCBcInB1Ymxpc2hcIilcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ3ZhbHVlJywgXCJ0cnVlXCIpXG4gICAgICAgICAgICAgICAgICAgIC5hcHBlbmRUbygnI3Bvc3QnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9ICk7XG5cbiAgICAgICAgd2luZG93Lm9uYmVmb3JldW5sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gY2hhbmdlTm90U2F2ZWQgPyBcIklmIHlvdSBsZWF2ZSB0aGlzIHBhZ2UgeW91IHdpbGwgbG9zZSB5b3VyIHVuc2F2ZWQgY2hhbmdlcy5cIiA6IG51bGw7XG4gICAgICAgIH07XG5cbiAgICAgICAgJCgnaW5wdXRbdHlwZT1zdWJtaXRdJykuY2xpY2soZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHZhciB1bmlxdWVfdmFsdWVzID0ge307XG4gICAgICAgICAgICB2YXIgZHVwbGljYXRlID0gZmFsc2U7XG4gICAgICAgICAgICAkKCdpbnB1dFtuYW1lPVwibGxtc192b3VjaGVyX2NvZGVbXVwiXScpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIHZhbCA9ICQodGhpcykudmFsKClcbiAgICAgICAgICAgICAgICBpZiAoICEgdW5pcXVlX3ZhbHVlc1t2YWxdICkge1xuICAgICAgICAgICAgICAgICAgICB1bmlxdWVfdmFsdWVzW3ZhbF0gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgJ3JnYmEoMjI2LCA5NiwgNzMsIDAuNiknKTtcbiAgICAgICAgICAgICAgICAgICAgZHVwbGljYXRlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmKGR1cGxpY2F0ZSkge1xuICAgICAgICAgICAgICAgIGFsZXJ0KCdQbGVhc2UgbWFrZSBzdXJlIHRoYXQgdGhlcmUgYXJlIG5vIGR1cGxpY2F0ZSB2b3VjaGVyIGNvZGVzLicpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy9pZiBjb3Vyc2Ugb3IgbWVtYmVyc2hpcCBpcyBub3Qgc2VsZWN0ZWQsIGRvbid0IGFsbG93IHVzZXIgdG8gc2F2ZVxuICAgICAgICAgICAgaWYoISgkKCcjX2xsbXNfdm91Y2hlcl9jb3Vyc2VzJykudmFsKCkgfHwgJCgnI19sbG1zX3ZvdWNoZXJfbWVtYmVyc2hpcCcpLnZhbCgpKSkge1xuICAgICAgICAgICAgICAgIGFsZXJ0KCdQbGVhc2Ugc2VsZWN0IGNvdXJzZSBvciBtZW1iZXJzaGlwIGJlZm9yZSBzYXZpbmcuJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjaGFuZ2VOb3RTYXZlZCA9IGZhbHNlO1xuICAgICAgICAgICAgY2hlY2tfdm91Y2hlcl9kdXBsaWNhdGUoKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZnVuY3Rpb24gYmluZERlbGV0ZVZvdWNoZXJDb2RlKCkge1xuICAgICAgICAgICAgJCgnLmxsbXMtdm91Y2hlci1kZWxldGUnKS51bmJpbmQoJ2NsaWNrJyk7XG4gICAgICAgICAgICAkKCcubGxtcy12b3VjaGVyLWRlbGV0ZScpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICAgICAgdmFyIHQgPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgIHZhciBvbGQgPSB0LmRhdGEoJ2lkJyk7XG5cbiAgICAgICAgICAgICAgICBjaGFuZ2VOb3RTYXZlZCA9IHRydWU7XG5cbiAgICAgICAgICAgICAgICBpZiAob2xkKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZUlkcy5wdXNoKG9sZCk7XG5cbiAgICAgICAgICAgICAgICAgICAgJCgnI2RlbGV0ZV9pZHMnKS52YWwoZGVsZXRlSWRzLmpvaW4oJywnKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29kZXNBZGRlZFNpbmNlTGFzdFNhdmUtLTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgaHRtbCBibG9ja1xuICAgICAgICAgICAgICAgIHQuY2xvc2VzdCgndHInKS5yZW1vdmUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgZnVuY3Rpb24gcmFuZG9taXplQ29kZSgpIHtcbiAgICAgICAgdmFyIHRleHQgPSAnJztcbiAgICAgICAgdmFyIHBvc3NpYmxlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5JztcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEyOyBpKyspXG4gICAgICAgICAgICB0ZXh0ICs9IHBvc3NpYmxlLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBwb3NzaWJsZS5sZW5ndGgpKTtcblxuICAgICAgICByZXR1cm4gdGV4dDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVjayBmb3Igdm91Y2hlciBkdXBsaWNhdGVzIGluIG90aGVyIHBvc3RzLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNoZWNrX3ZvdWNoZXJfZHVwbGljYXRlKCkge1xuXG4gICAgICAgIHZhciBjb2RlcyA9IGdldF9jb2Rlc19mcm9tX2lucHV0cygpO1xuXG4gICAgICAgIHZhciBkYXRhID0ge2FjdGlvbjogJ2NoZWNrX3ZvdWNoZXJfZHVwbGljYXRlJywgJ3Bvc3RJZCcgOiBqUXVlcnkoJyNwb3N0X0lEJykudmFsKCksICdjb2RlcycgOiBjb2RlcyB9O1xuXG4gICAgICAgIHZhciBhamF4ID0gbmV3IEFqYXgoJ3Bvc3QnLCBkYXRhLCBmYWxzZSk7XG4gICAgICAgIGFqYXguY2hlY2tfdm91Y2hlcl9kdXBsaWNhdGUoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRfY29kZXNfZnJvbV9pbnB1dHMoKSB7XG4gICAgICAgIHZhciBjb2RlcyA9IFtdO1xuICAgICAgICAkKCdpbnB1dFtuYW1lPVwibGxtc192b3VjaGVyX2NvZGVbXVwiXScpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb2Rlcy5wdXNoKCQodGhpcykudmFsKCkpO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gY29kZXM7XG4gICAgfVxuXG59KShqUXVlcnkpO1xuXG5mdW5jdGlvbiBsbG1zX29uX3ZvdWNoZXJfZHVwbGljYXRlIChyZXN1bHRzKSB7XG4gICAgaWYocmVzdWx0cy5sZW5ndGgpIHtcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKysgKSB7XG4gICAgICAgICAgICBqUXVlcnkoJ2lucHV0W3ZhbHVlPVwiJyArIHJlc3VsdHNbaV0uY29kZSArICdcIl0nKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAncmdiYSgyMjYsIDk2LCA3MywgMC42KScpO1xuICAgICAgICB9XG4gICAgICAgIGFsZXJ0KCdQbGVhc2UgbWFrZSBzdXJlIHRoYXQgdGhlcmUgYXJlIG5vIGR1cGxpY2F0ZSB2b3VjaGVyIGNvZGVzLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGpRdWVyeSggXCIjcG9zdFwiICkuc3VibWl0KCk7XG4gICAgfVxufVxuIl19
