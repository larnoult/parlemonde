!function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):"undefined"!=typeof module&&module.exports?module.exports=t(require("jquery")):t(jQuery)}(function(l){var a=-1,i=-1,h=function(t){return parseFloat(t)||0},c=function(t){var e=l(t),a=null,i=[];return e.each(function(){var t=l(this),e=t.offset().top-h(t.css("margin-top")),o=0<i.length?i[i.length-1]:null;null===o?i.push(t):Math.floor(Math.abs(a-e))<=1?i[i.length-1]=o.add(t):i.push(t),a=e}),i},p=function(t){var e={byRow:!0,property:"height",target:null,remove:!1};return"object"==typeof t?l.extend(e,t):("boolean"==typeof t?e.byRow=t:"remove"===t&&(e.remove=!0),e)},d=l.fn.matchHeight=function(t){var e=p(t);if(e.remove){var o=this;return this.css(e.property,""),l.each(d._groups,function(t,e){e.elements=e.elements.not(o)}),this}return this.length<=1&&!e.target||(d._groups.push({elements:this,options:e}),d._apply(this,e)),this};d.version="0.7.0",d._groups=[],d._throttle=80,d._maintainScroll=!1,d._beforeUpdate=null,d._afterUpdate=null,d._rows=c,d._parse=h,d._parseOptions=p,d._apply=function(t,e){var n=p(e),o=l(t),a=[o],i=l(window).scrollTop(),r=l("html").outerHeight(!0),s=o.parents().filter(":hidden");return s.each(function(){var t=l(this);t.data("style-cache",t.attr("style"))}),s.css("display","block"),n.byRow&&!n.target&&(o.each(function(){var t=l(this),e=t.css("display");"inline-block"!==e&&"flex"!==e&&"inline-flex"!==e&&(e="block"),t.data("style-cache",t.attr("style")),t.css({display:e,"padding-top":"0","padding-bottom":"0","margin-top":"0","margin-bottom":"0","border-top-width":"0","border-bottom-width":"0",height:"100px",overflow:"hidden"})}),a=c(o),o.each(function(){var t=l(this);t.attr("style",t.data("style-cache")||"")})),l.each(a,function(t,e){var o=l(e),i=0;if(n.target)i=n.target.outerHeight(!1);else{if(n.byRow&&o.length<=1)return void o.css(n.property,"");o.each(function(){var t=l(this),e=t.attr("style"),o=t.css("display");"inline-block"!==o&&"flex"!==o&&"inline-flex"!==o&&(o="block");var a={display:o};a[n.property]="",t.css(a),t.outerHeight(!1)>i&&(i=t.outerHeight(!1)),e?t.attr("style",e):t.css("display","")})}o.each(function(){var t=l(this),e=0;n.target&&t.is(n.target)||("border-box"!==t.css("box-sizing")&&(e+=h(t.css("border-top-width"))+h(t.css("border-bottom-width")),e+=h(t.css("padding-top"))+h(t.css("padding-bottom"))),t.css(n.property,i-e+"px"))})}),s.each(function(){var t=l(this);t.attr("style",t.data("style-cache")||null)}),d._maintainScroll&&l(window).scrollTop(i/r*l("html").outerHeight(!0)),this},d._applyDataApi=function(){var o={};l("[data-match-height], [data-mh]").each(function(){var t=l(this),e=t.attr("data-mh")||t.attr("data-match-height");o[e]=e in o?o[e].add(t):t}),l.each(o,function(){this.matchHeight(!0)})};var n=function(t){d._beforeUpdate&&d._beforeUpdate(t,d._groups),l.each(d._groups,function(){d._apply(this.elements,this.options)}),d._afterUpdate&&d._afterUpdate(t,d._groups)};d._update=function(t,e){if(e&&"resize"===e.type){var o=l(window).width();if(o===a)return;a=o}t?-1===i&&(i=setTimeout(function(){n(e),i=-1},d._throttle)):n(e)},l(d._applyDataApi),l(window).bind("load",function(t){d._update(!1,t)}),l(window).bind("resize orientationchange",function(t){d._update(!0,t)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
