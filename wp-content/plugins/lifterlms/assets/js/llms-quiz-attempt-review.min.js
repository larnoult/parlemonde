!function(m){window.llms=window.llms||{},window.llms.grading=new function(){return m('button[name="llms_quiz_attempt_action"][value="llms_attempt_grade"]').one("click",function(t){t.preventDefault(),m(this).addClass("grading"),function(){$els=m(".llms-quiz-attempt-question:not(.type--content)");var i=LLMS.l10n.translate("Remarks to Student"),r=LLMS.l10n.translate("points");$els.each(function(){var t=m(this).attr("data-question-id"),a=m(this).find(".llms-quiz-attempt-answer-section.llms-remarks"),e=m('<div class="llms-quiz-attempt-answer-section llms-remarks" />'),n=m('<textarea class="llms-remarks-field" name="remarks['+t+']"></textarea>');if(gradeable="yes"===m(this).attr("data-grading-manual"),e.append('<p class="llms-quiz-results-label remarks">'+i+":</p>"),e.append(n),gradeable){var s=m(this).attr("data-points-curr"),l=m(this).attr("data-points");e.append('<input name="points['+t+']" max="'+l+'" min="0" type="number" value="'+s+'"> / '+l+" "+r)}a.length?(n.text(a.find(".llms-remarks").text()),a.replaceWith(e)):m(this).find(".llms-quiz-attempt-question-main").append(e)}),$els.first().find(".toggle-answer").trigger("click")}()}),this}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxsbXMtcXVpei1hdHRlbXB0LXJldmlldy5qcyJdLCJuYW1lcyI6WyIkIiwid2luZG93IiwibGxtcyIsImdyYWRpbmciLCJvbmUiLCJlIiwicHJldmVudERlZmF1bHQiLCJ0aGlzIiwiYWRkQ2xhc3MiLCIkZWxzIiwidGl0bGUiLCJMTE1TIiwibDEwbiIsInRyYW5zbGF0ZSIsInBvaW50cyIsImVhY2giLCJpZCIsImF0dHIiLCIkZXhpc3RpbmciLCJmaW5kIiwiJHVpIiwiJHRleHRhcmVhIiwiZ3JhZGVhYmxlIiwiYXBwZW5kIiwicHRzIiwibWF4IiwibGVuZ3RoIiwidGV4dCIsInJlcGxhY2VXaXRoIiwiZmlyc3QiLCJ0cmlnZ2VyIiwic2V0dXBfZmllbGRzIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQ0FLQyxTQUFZQSxHQThFWkMsT0FBT0MsS0FBT0QsT0FBT0MsTUFBUSxHQUM3QkQsT0FBT0MsS0FBS0MsUUFBVSxJQTdFUixXQXdFYixPQTlEQ0gsRUFBRyx1RUFBd0VJLElBQUssUUFBUyxTQUFVQyxHQUVsR0EsRUFBRUMsaUJBRUZOLEVBQUdPLE1BQU9DLFNBQVUsV0FjdEIsV0FFQ0MsS0FBT1QsRUFBRyxtREFFVixJQUFJVSxFQUFRQyxLQUFLQyxLQUFLQyxVQUFXLHNCQUNoQ0MsRUFBU0gsS0FBS0MsS0FBS0MsVUFBVyxVQUUvQkosS0FBS00sS0FBTSxXQUVWLElBQUlDLEVBQUtoQixFQUFHTyxNQUFPVSxLQUFNLG9CQUN4QkMsRUFBWWxCLEVBQUdPLE1BQU9ZLEtBQU0sa0RBQzVCQyxFQUFNcEIsRUFBRyxpRUFDVHFCLEVBQVlyQixFQUFHLHNEQUF3RGdCLEVBQUssa0JBSzdFLEdBSkNNLFVBQWMsUUFBVXRCLEVBQUdPLE1BQU9VLEtBQU0sdUJBRXpDRyxFQUFJRyxPQUFRLDhDQUFnRGIsRUFBUSxTQUNwRVUsRUFBSUcsT0FBUUYsR0FDUEMsVUFBWSxDQUNoQixJQUFJRSxFQUFNeEIsRUFBR08sTUFBT1UsS0FBTSxvQkFDekJRLEVBQU16QixFQUFHTyxNQUFPVSxLQUFNLGVBQ3ZCRyxFQUFJRyxPQUFRLHVCQUF5QlAsRUFBSyxXQUFhUyxFQUFNLGtDQUFvQ0QsRUFBTSxRQUFVQyxFQUFNLElBQU1YLEdBR3pISSxFQUFVUSxRQUVkTCxFQUFVTSxLQUFNVCxFQUFVQyxLQUFNLGlCQUFrQlEsUUFDbERULEVBQVVVLFlBQWFSLElBSXZCcEIsRUFBR08sTUFBT1ksS0FBTSxvQ0FBcUNJLE9BQVFILEtBUS9EWCxLQUFLb0IsUUFBUVYsS0FBTSxrQkFBbUJXLFFBQVMsU0FsRDlDQyxLQXdES3hCLE1BMUVSLENBa0ZJeUIiLCJmaWxlIjoibGxtcy1xdWl6LWF0dGVtcHQtcmV2aWV3Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUXVpeiBhdHRlbXB0IHJldmlldyAvIGdyYWRpbmcgVUkgJiBVWFxuICogQHNpbmNlICAgIDMuMTYuMFxuICogQHZlcnNpb24gIDMuMTYuOVxuICovXG47KCBmdW5jdGlvbiggJCApIHtcblxuXHR2YXIgR3JhZGluZyA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0LyoqXG5cdFx0ICogQmluZCBET00gZXZlbnRzXG5cdFx0ICogQHJldHVybiAgIHZvaWRcblx0XHQgKiBAc2luY2UgICAgMy4xNi4wXG5cdFx0ICogQHZlcnNpb24gIDMuMTYuOVxuXHRcdCAqL1xuXHRcdGZ1bmN0aW9uIGJpbmQoKSB7XG5cblx0XHRcdCQoICdidXR0b25bbmFtZT1cImxsbXNfcXVpel9hdHRlbXB0X2FjdGlvblwiXVt2YWx1ZT1cImxsbXNfYXR0ZW1wdF9ncmFkZVwiXScgKS5vbmUoICdjbGljaycsIGZ1bmN0aW9uKCBlICkge1xuXG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdFx0XHQkKCB0aGlzICkuYWRkQ2xhc3MoICdncmFkaW5nJyApO1xuXG5cdFx0XHRcdHNldHVwX2ZpZWxkcygpO1xuXG5cdFx0XHR9ICk7XG5cblx0XHR9XG5cblx0XHQvKipcblx0XHQgKiBDcmVhdGUgZWRpdGFibGUgZmllbGRzIGZvciBncmFkaW5nIC8gcmVtYXJraW5nXG5cdFx0ICogQHJldHVybiAgIHtbdHlwZV19XG5cdFx0ICogQHNpbmNlICAgIDMuMTYuMFxuXHRcdCAqIEB2ZXJzaW9uICAzLjE2LjBcblx0XHQgKi9cblx0XHRmdW5jdGlvbiBzZXR1cF9maWVsZHMoKSB7XG5cblx0XHRcdCRlbHMgPSAkKCAnLmxsbXMtcXVpei1hdHRlbXB0LXF1ZXN0aW9uOm5vdCgudHlwZS0tY29udGVudCknICk7XG5cblx0XHRcdHZhciB0aXRsZSA9IExMTVMubDEwbi50cmFuc2xhdGUoICdSZW1hcmtzIHRvIFN0dWRlbnQnICksXG5cdFx0XHRcdHBvaW50cyA9IExMTVMubDEwbi50cmFuc2xhdGUoICdwb2ludHMnICk7XG5cblx0XHRcdCRlbHMuZWFjaCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0dmFyIGlkID0gJCggdGhpcyApLmF0dHIoICdkYXRhLXF1ZXN0aW9uLWlkJyApLFxuXHRcdFx0XHRcdCRleGlzdGluZyA9ICQoIHRoaXMgKS5maW5kKCAnLmxsbXMtcXVpei1hdHRlbXB0LWFuc3dlci1zZWN0aW9uLmxsbXMtcmVtYXJrcycgKSxcblx0XHRcdFx0XHQkdWkgPSAkKCAnPGRpdiBjbGFzcz1cImxsbXMtcXVpei1hdHRlbXB0LWFuc3dlci1zZWN0aW9uIGxsbXMtcmVtYXJrc1wiIC8+JyApLFxuXHRcdFx0XHRcdCR0ZXh0YXJlYSA9ICQoICc8dGV4dGFyZWEgY2xhc3M9XCJsbG1zLXJlbWFya3MtZmllbGRcIiBuYW1lPVwicmVtYXJrc1snICsgaWQgKyAnXVwiPjwvdGV4dGFyZWE+JyApXG5cdFx0XHRcdFx0Z3JhZGVhYmxlID0gKCAneWVzJyA9PT0gJCggdGhpcyApLmF0dHIoICdkYXRhLWdyYWRpbmctbWFudWFsJyApICk7XG5cblx0XHRcdFx0JHVpLmFwcGVuZCggJzxwIGNsYXNzPVwibGxtcy1xdWl6LXJlc3VsdHMtbGFiZWwgcmVtYXJrc1wiPicgKyB0aXRsZSArICc6PC9wPicpXG5cdFx0XHRcdCR1aS5hcHBlbmQoICR0ZXh0YXJlYSApO1xuXHRcdFx0XHRpZiAoIGdyYWRlYWJsZSApIHtcblx0XHRcdFx0XHR2YXIgcHRzID0gJCggdGhpcyApLmF0dHIoICdkYXRhLXBvaW50cy1jdXJyJyApLFxuXHRcdFx0XHRcdFx0bWF4ID0gJCggdGhpcyApLmF0dHIoICdkYXRhLXBvaW50cycgKTtcblx0XHRcdFx0XHQkdWkuYXBwZW5kKCAnPGlucHV0IG5hbWU9XCJwb2ludHNbJyArIGlkICsgJ11cIiBtYXg9XCInICsgbWF4ICsgJ1wiIG1pbj1cIjBcIiB0eXBlPVwibnVtYmVyXCIgdmFsdWU9XCInICsgcHRzICsgJ1wiPiAvICcgKyBtYXggKyAnICcgKyBwb2ludHMgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICggJGV4aXN0aW5nLmxlbmd0aCApIHtcblxuXHRcdFx0XHRcdCR0ZXh0YXJlYS50ZXh0KCAkZXhpc3RpbmcuZmluZCggJy5sbG1zLXJlbWFya3MnICkudGV4dCgpICk7XG5cdFx0XHRcdFx0JGV4aXN0aW5nLnJlcGxhY2VXaXRoKCAkdWkgKTtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0JCggdGhpcyApLmZpbmQoICcubGxtcy1xdWl6LWF0dGVtcHQtcXVlc3Rpb24tbWFpbicgKS5hcHBlbmQoICR1aSApO1xuXG5cdFx0XHRcdH1cblxuXG5cdFx0XHR9ICk7XG5cblxuXHRcdFx0JGVscy5maXJzdCgpLmZpbmQoICcudG9nZ2xlLWFuc3dlcicgKS50cmlnZ2VyKCAnY2xpY2snICk7XG5cblx0XHR9XG5cblx0XHRiaW5kKCk7XG5cblx0XHRyZXR1cm4gdGhpcztcblxuXHR9O1xuXG5cdHdpbmRvdy5sbG1zID0gd2luZG93LmxsbXMgfHwge307XG5cdHdpbmRvdy5sbG1zLmdyYWRpbmcgPSBuZXcgR3JhZGluZygpO1xuXG5cbn0gKSggalF1ZXJ5ICk7XG4iXX0=
