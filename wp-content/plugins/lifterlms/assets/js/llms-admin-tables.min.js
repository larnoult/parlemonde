!function(r,t){window.llms=window.llms||{};window.llms.admin_tables=new function(){this.$tables=null,this.init=function(){var t=this;t.$tables=r(".llms-gb-table"),t.$tables.length&&t.bind()},this.bind=function(){var s=this;this.$tables.each(function(){var e,n,l,a=r(this);a.on("click",'button[name="llms-table-paging"]',function(t){t.preventDefault(),s.change_page(a,r(this))}),a.on("click",'button[name="llms-table-export"]',function(t){t.preventDefault(),s.export(a,r(this))}),a.on("click","a.llms-sortable",function(t){t.preventDefault(),s.change_order(a,r(this))}),a.parent().find(".llms-table-filters").on("change","select.llms-table-filter",function(t){console.log(t),s.change_filter(a,r(this))}),a.parent().find(".llms-table-search").on("keyup","input",(e=function(t){switch(t.keyCode){case 37:case 38:case 39:case 40:return;default:s.search(a,r(this))}},n=250,l=null,function(){var t=this,a=arguments;window.clearTimeout(l),l=window.setTimeout(function(){e.apply(t,a)},n)}))})},this.change_order=function(t,a){this.reload(t,{order:a.attr("data-order"),orderby:a.attr("data-orderby"),page:1})},this.change_filter=function(t,a){this.reload(t,{filter:a.val(),filterby:a.attr("name"),page:1})},this.change_page=function(t,a){this.reload(t,{order:this.get_args(t,"order"),orderby:this.get_args(t,"orderby"),page:a.attr("data-page")})},this.export=function(a,t){LLMS.Ajax.call({data:r.extend({action:"export_admin_table",handler:a.attr("data-handler")},JSON.parse(a.attr("data-args"))),beforeSend:function(){LLMS.Spinner.start(a.closest(".llms-table-wrap")),t.attr("disabled","disabled")},success:function(t){LLMS.Spinner.stop(a.closest(".llms-table-wrap")),t.success&&a.find(".llms-table-export").append("<em><small>"+t.data+"</small></em>")}})},this.get_args=function(t,a){var e=JSON.parse(t.attr("data-args"));return a?!!e[a]&&e[a]:e},this.reload=function(a,t){t=r.extend({action:"get_admin_table_data",handler:a.attr("data-handler")},JSON.parse(a.attr("data-args")),t),LLMS.Ajax.call({data:t,beforeSend:function(){LLMS.Spinner.start(a.closest(".llms-table-wrap"))},success:function(t){LLMS.Spinner.stop(a.closest(".llms-table-wrap")),t.success&&(a.attr("data-args",t.data.args),a.find("thead").replaceWith(t.data.thead),a.find("tbody").replaceWith(t.data.tbody),a.find("tfoot").replaceWith(t.data.tfoot))}})},this.search=function(t,a){var e=a.val();len=e.length,(0===len||3<=len)&&this.reload(t,{page:1,search:a.val()})},this.init()}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
