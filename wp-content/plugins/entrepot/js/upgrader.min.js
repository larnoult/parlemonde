window.wp=window.wp||{},window.entrepot=_.extend(window.entrepot||{},_.pick(window.wp,"Backbone","ajax","template")),function(a,b){"undefined"!=typeof entrepotUpgraderl10n&&(a.Models=a.Models||{},a.Collections=a.Collections||{},a.Views=a.Views||{},a.Collections.Tasks=Backbone.Collection.extend({proceed:function(b){return b=b||{},b.context=this,b.data=b.data||{},b.url="",b.beforeSend=function(a){a.setRequestHeader("X-Entrepot-Nonce",entrepotUpgraderl10n.entrepot_nonce),a.setRequestHeader("Accept","application/json")},a.ajax.send(b)}}),a.View=a.Backbone.View.extend({prepare:function(){return!_.isUndefined(this.model)&&_.isFunction(this.model.toJSON)?this.model.toJSON():{}}}),a.Views.Card=a.View.extend({className:"repository-card",template:a.template("repository-card"),initialize:function(){this.model.get("did_upgrade")||(this.listenToOnce(this.model,"change:do_upgrade",this.displayTasks),this.listenToOnce(this.model,"change:did_upgrade",this.emptyTasks))},setUpTasks:function(){var a=this;_.isUndefined(entrepotUpgraderl10n.tasks[this.model.get("slug")])||_.each(entrepotUpgraderl10n.tasks[this.model.get("slug")],function(b,c){_.isObject(b)&&a.tasks.add({id:b.callback,order:c,message:b.message,count:b.count,number:b.number,done:0,active:!1})})},displayTasks:function(){this.tasks=new a.Collections.Tasks,this.views.add(".repository-tasks",new a.Views.Upgrader({collection:this.tasks,repository:this.model})),this.setUpTasks()},emptyTasks:function(a){var b=this;!1!==a.get("did_upgrade")&&window.setTimeout(function(){_.first(b.views._views[".repository-tasks"]).remove()},1e3)}}),a.Views.Cards=a.View.extend({events:{"click .repository-do-upgrade":"initUpgrade"},initialize:function(){_.each(this.collection.models,function(a){this.displayRepository(a)},this),this.listenTo(this.collection,"change:did_upgrade",this.resetButtons)},displayRepository:function(b){this.views.add(new a.Views.Card({model:b}))},initUpgrade:function(c){if(c.preventDefault(),!a.Upgrader.isWarned){var d=window.confirm(entrepotUpgraderl10n.confirm);if(a.Upgrader.isWarned=!0,!d)return}var e=b(c.currentTarget),f=e.data("slug");e.hasClass("disabled")||!f||_.isUndefined(this.views._views[""])||_.each(this.views._views[""],function(a){a.$el.find("button.repository-do-upgrade").addClass("disabled"),f===a.model.get("slug")&&a.model.set("do_upgrade",!0)})},resetButtons:function(a){_.each(this.views._views[""],function(c){var d=c.$el.find("button.repository-do-upgrade"),e=c.model.get("did_upgrade");!1!==e&&d.removeClass("disabled"),a.get("slug")===c.model.get("slug")&&e&&(c.$el.find(".description").remove(),d.remove(),c.$el.find(".repository-info").append(b("<div></div>").addClass("repository-upgraded").html('<span class="dashicons dashicons-yes"></span>'+entrepotUpgraderl10n.upgraded)))})}}),a.Views.Upgrader=a.View.extend({tagName:"div",initialize:function(){this.containerId=this.options.repository.get("slug")+"-upgrader-tasks",this.views.add(new a.View({tagName:"ul",id:this.containerId})),this.collection.on("add",this.injectTask,this),this.collection.on("change:active",this.manageQueue,this),this.collection.on("change:done",this.manageQueue,this)},taskSuccess:function(a){var b,c,d;a.done&&a.callback&&(b=this.tasks.get(a.callback),b.set("done",Number(a.done)+Number(b.get("done"))),Number(b.get("count"))===Number(b.get("done"))&&(b.set("active",!1),c=Number(b.get("order"))+1,d=this.tasks.findWhere({order:c}),_.isObject(d)?d.set("active",!0):this.repository.set("did_upgrade",!0)))},taskError:function(a){if(a.message){var c;c=a.callback?"#"+a.callback+" .upgrade-progress":b("#"+this.repository.get("slug")+"-upgrader-tasks").prepend(b("<li></li>").addClass("entrepot-upgrader-task").html(b("<div></div>").addClass("upgrade-progress"))).children().first().find(".upgrade-progress"),b(c).html(a.message).addClass(a.type)}this.repository.set("did_upgrade",!1)},injectTask:function(b){this.views.add("#"+this.containerId,new a.Views.Task({model:b}))},manageQueue:function(a){var b={tasks:this.collection,repository:this.options.repository};!0===a.get("active")&&this.collection.proceed({data:_.pick(a.attributes,["id","count","number","done"]),success:_.bind(this.taskSuccess,b),error:_.bind(this.taskError,b)})}}),a.Views.Task=a.View.extend({tagName:"li",template:a.template("progress-window"),className:"entrepot-upgrader-task",initialize:function(){this.model.on("change:done",this.taskProgress,this),this.model.on("change:active",this.addClass,this),0===this.model.get("order")&&this.model.set("active",!0)},addClass:function(a){!0===a.get("active")&&b(this.$el).addClass("active")},taskProgress:function(a){if(!_.isUndefined(a.get("done"))&&!_.isUndefined(a.get("count"))){var c=Number(a.get("done"))/Number(a.get("count"))*100;b("#"+a.get("id")+" .upgrade-progress .upgrade-bar").css("width",c+"%")}}}),a.Upgrader={start:function(){this.repositories=new Backbone.Collection(entrepotUpgraderl10n.repositories),this.isWarned=!1,this.cards=new a.Views.Cards({el:b("#entrepot-cards"),collection:this.repositories}).render()}},a.Upgrader.start())}(window.entrepot,jQuery);